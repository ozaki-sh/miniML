
** Conflict (shift/reduce) in state 223.
** Token involved: BAR
** This state is reached from toplevel after reading:

MATCH Expr WITH option(BAR) Pattern list(MorePattern) RARROW MATCH Expr WITH option(BAR) Pattern list(MorePattern) RARROW Expr MorePatternMatchExpr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
MatchExpr 
MATCH Expr WITH option(BAR) PatternMatchExpr 
                            (?)

** In state 223, looking ahead at BAR, shifting is permitted
** because of the following sub-derivation:

Pattern list(MorePattern) RARROW Expr list(MorePatternMatchExpr) 
                                 MatchExpr 
                                 MATCH Expr WITH option(BAR) PatternMatchExpr 
                                                             Pattern list(MorePattern) RARROW Expr list(MorePatternMatchExpr) 
                                                                                                   MorePatternMatchExpr list(MorePatternMatchExpr) 
                                                                                                                        MorePatternMatchExpr list(MorePatternMatchExpr) 
                                                                                                                        . BAR Pattern list(MorePattern) RARROW Expr 

** In state 223, looking ahead at BAR, reducing production
** list(MorePatternMatchExpr) -> 
** is permitted because of the following sub-derivation:

Pattern list(MorePattern) RARROW Expr list(MorePatternMatchExpr) // lookahead token appears because list(MorePatternMatchExpr) can begin with BAR
                                 MatchExpr // lookahead token is inherited
                                 MATCH Expr WITH option(BAR) PatternMatchExpr // lookahead token is inherited
                                                             Pattern list(MorePattern) RARROW Expr list(MorePatternMatchExpr) // lookahead token is inherited
                                                                                                   MorePatternMatchExpr list(MorePatternMatchExpr) // lookahead token is inherited
                                                                                                                        . 

** Conflict (shift/reduce) in state 219.
** Token involved: COMMA
** This state is reached from toplevel after reading:

MATCH Expr WITH option(BAR) Pattern list(MorePattern) RARROW Expr BAR Pattern list(MorePattern) RARROW Expr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
(?)

** In state 219, looking ahead at COMMA, reducing production
** MorePatternMatchExpr -> BAR Pattern list(MorePattern) RARROW Expr 
** is permitted because of the following sub-derivation:

TupleHeadExpr 
Expr COMMA TupleTailExpr // lookahead token appears
MatchExpr // lookahead token is inherited
MATCH Expr WITH option(BAR) PatternMatchExpr // lookahead token is inherited
                            Pattern list(MorePattern) RARROW Expr list(MorePatternMatchExpr) // lookahead token is inherited
                                                                  MorePatternMatchExpr list(MorePatternMatchExpr) // lookahead token is inherited because list(MorePatternMatchExpr) can vanish
                                                                  BAR Pattern list(MorePattern) RARROW Expr . 

** In state 219, looking ahead at COMMA, shifting is permitted
** because of the following sub-derivation:

MatchExpr 
MATCH Expr WITH option(BAR) PatternMatchExpr 
                            Pattern list(MorePattern) RARROW Expr list(MorePatternMatchExpr) 
                                                                  MorePatternMatchExpr list(MorePatternMatchExpr) 
                                                                  BAR Pattern list(MorePattern) RARROW Expr 
                                                                                                       TupleHeadExpr 
                                                                                                       Expr . COMMA TupleTailExpr 

** Conflict (shift/reduce) in state 214.
** Tokens involved: COMMA BAR
** The following explanations concentrate on token COMMA.
** This state is reached from toplevel after reading:

MATCH Expr WITH option(BAR) Pattern list(MorePattern) RARROW Expr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
(?)

** In state 214, looking ahead at COMMA, shifting is permitted
** because of the following sub-derivation:

MatchExpr 
MATCH Expr WITH option(BAR) PatternMatchExpr 
                            Pattern list(MorePattern) RARROW Expr list(MorePatternMatchExpr) 
                                                             TupleHeadExpr 
                                                             Expr . COMMA TupleTailExpr 

** In state 214, looking ahead at COMMA, reducing production
** list(MorePatternMatchExpr) -> 
** is permitted because of the following sub-derivation:

TupleHeadExpr 
Expr COMMA TupleTailExpr // lookahead token appears
MatchExpr // lookahead token is inherited
MATCH Expr WITH option(BAR) PatternMatchExpr // lookahead token is inherited
                            Pattern list(MorePattern) RARROW Expr list(MorePatternMatchExpr) // lookahead token is inherited
                                                                  . 

** Conflict (reduce/reduce) in state 201.
** Tokens involved: RPAREN RBOXBRA RARROW CONS COMMA COLON BAR
** The following explanations concentrate on token RARROW.
** This state is reached from toplevel after reading:

MATCH Expr WITH option(BAR) Pattern COMMA Pattern COMMA TupleTailPattern 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
MatchExpr 
MATCH Expr WITH option(BAR) PatternMatchExpr 
                            Pattern list(MorePattern) RARROW Expr list(MorePatternMatchExpr) // lookahead token appears because list(MorePattern) can vanish
                            TupleHeadPattern // lookahead token is inherited
                            Pattern COMMA TupleTailPattern // lookahead token is inherited
                                          (?)

** In state 201, looking ahead at RARROW, reducing production
** TupleHeadPattern -> Pattern COMMA TupleTailPattern 
** is permitted because of the following sub-derivation:

Pattern // lookahead token is inherited
TupleHeadPattern // lookahead token is inherited
Pattern COMMA TupleTailPattern . 

** In state 201, looking ahead at RARROW, reducing production
** TupleTailPattern -> Pattern COMMA TupleTailPattern 
** is permitted because of the following sub-derivation:

Pattern COMMA TupleTailPattern . 

** Conflict (shift/reduce) in state 199.
** Tokens involved: CONS COMMA
** The following explanations concentrate on token CONS.
** This state is reached from toplevel after reading:

MATCH Expr WITH option(BAR) Pattern COMMA Pattern 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
MatchExpr 
MATCH Expr WITH option(BAR) PatternMatchExpr 
                            Pattern list(MorePattern) RARROW Expr list(MorePatternMatchExpr) 
                            (?)

** In state 199, looking ahead at CONS, shifting is permitted
** because of the following sub-derivation:

TupleHeadPattern 
Pattern COMMA TupleTailPattern 
              Pattern 
              Pattern . CONS Pattern 

** In state 199, looking ahead at CONS, reducing production
** TupleTailPattern -> Pattern 
** is permitted because of the following sub-derivation:

Pattern CONS Pattern // lookahead token appears
TupleHeadPattern // lookahead token is inherited
Pattern COMMA TupleTailPattern // lookahead token is inherited
              Pattern . 

** Conflict (shift/reduce) in state 196.
** Tokens involved: CONS COMMA
** The following explanations concentrate on token CONS.
** This state is reached from toplevel after reading:

MATCH Expr WITH option(BAR) Pattern CONS Pattern 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
MatchExpr 
MATCH Expr WITH option(BAR) PatternMatchExpr 
                            Pattern list(MorePattern) RARROW Expr list(MorePatternMatchExpr) 
                            (?)

** In state 196, looking ahead at CONS, shifting is permitted
** because of the following sub-derivation:

Pattern CONS Pattern 
             Pattern . CONS Pattern 

** In state 196, looking ahead at CONS, reducing production
** Pattern -> Pattern CONS Pattern 
** is permitted because of the following sub-derivation:

Pattern CONS Pattern // lookahead token appears
Pattern CONS Pattern . 

** Conflict (shift/reduce) in state 166.
** Token involved: COMMA
** This state is reached from toplevel after reading:

LET ID LetFunExpr IN Expr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
(?)

** In state 166, looking ahead at COMMA, reducing production
** LetAndExpr -> ID LetFunExpr IN Expr 
** is permitted because of the following sub-derivation:

TupleHeadExpr 
Expr COMMA TupleTailExpr // lookahead token appears
LetExpr // lookahead token is inherited
LET LetAndExpr // lookahead token is inherited
    ID LetFunExpr IN Expr . 

** In state 166, looking ahead at COMMA, shifting is permitted
** because of the following sub-derivation:

LetExpr 
LET LetAndExpr 
    ID LetFunExpr IN Expr 
                     TupleHeadExpr 
                     Expr . COMMA TupleTailExpr 

** Conflict (shift/reduce) in state 164.
** Token involved: COMMA
** This state is reached from toplevel after reading:

LET IDt EQ Expr IN Expr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
(?)

** In state 164, looking ahead at COMMA, reducing production
** LetAndExpr -> IDt EQ Expr IN Expr 
** is permitted because of the following sub-derivation:

TupleHeadExpr 
Expr COMMA TupleTailExpr // lookahead token appears
LetExpr // lookahead token is inherited
LET LetAndExpr // lookahead token is inherited
    IDt EQ Expr IN Expr . 

** In state 164, looking ahead at COMMA, shifting is permitted
** because of the following sub-derivation:

LetExpr 
LET LetAndExpr 
    IDt EQ Expr IN Expr 
                   TupleHeadExpr 
                   Expr . COMMA TupleTailExpr 

** Conflict (shift/reduce) in state 152.
** Token involved: COMMA
** This state is reached from toplevel after reading:

LET REC ID LetFunExpr IN Expr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
(?)

** In state 152, looking ahead at COMMA, reducing production
** LetRecAndExpr -> ID LetFunExpr IN Expr 
** is permitted because of the following sub-derivation:

TupleHeadExpr 
Expr COMMA TupleTailExpr // lookahead token appears
LetRecExpr // lookahead token is inherited
LET REC LetRecAndExpr // lookahead token is inherited
        ID LetFunExpr IN Expr . 

** In state 152, looking ahead at COMMA, shifting is permitted
** because of the following sub-derivation:

LetRecExpr 
LET REC LetRecAndExpr 
        ID LetFunExpr IN Expr 
                         TupleHeadExpr 
                         Expr . COMMA TupleTailExpr 

** Conflict (shift/reduce) in state 150.
** Token involved: COMMA
** This state is reached from toplevel after reading:

LET REC IDt EQ FunExpr IN Expr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
(?)

** In state 150, looking ahead at COMMA, reducing production
** LetRecAndExpr -> IDt EQ FunExpr IN Expr 
** is permitted because of the following sub-derivation:

TupleHeadExpr 
Expr COMMA TupleTailExpr // lookahead token appears
LetRecExpr // lookahead token is inherited
LET REC LetRecAndExpr // lookahead token is inherited
        IDt EQ FunExpr IN Expr . 

** In state 150, looking ahead at COMMA, shifting is permitted
** because of the following sub-derivation:

LetRecExpr 
LET REC LetRecAndExpr 
        IDt EQ FunExpr IN Expr 
                          TupleHeadExpr 
                          Expr . COMMA TupleTailExpr 

** Conflict (shift/reduce) in state 132.
** Token involved: COMMA
** This state is reached from toplevel after reading:

IF Expr THEN Expr ELSE Expr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
(?)

** In state 132, looking ahead at COMMA, reducing production
** IfExpr -> IF Expr THEN Expr ELSE Expr 
** is permitted because of the following sub-derivation:

TupleHeadExpr 
Expr COMMA TupleTailExpr // lookahead token appears
IfExpr // lookahead token is inherited
IF Expr THEN Expr ELSE Expr . 

** In state 132, looking ahead at COMMA, shifting is permitted
** because of the following sub-derivation:

IfExpr 
IF Expr THEN Expr ELSE Expr 
                       TupleHeadExpr 
                       Expr . COMMA TupleTailExpr 

** Conflict (shift/reduce) in state 127.
** Token involved: COMMA
** This state is reached from toplevel after reading:

FUN nonempty_list(IDt) RARROW Expr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
(?)

** In state 127, looking ahead at COMMA, reducing production
** FunExpr -> FUN nonempty_list(IDt) RARROW Expr 
** is permitted because of the following sub-derivation:

TupleHeadExpr 
Expr COMMA TupleTailExpr // lookahead token appears
FunExpr // lookahead token is inherited
FUN nonempty_list(IDt) RARROW Expr . 

** In state 127, looking ahead at COMMA, shifting is permitted
** because of the following sub-derivation:

FunExpr 
FUN nonempty_list(IDt) RARROW Expr 
                              TupleHeadExpr 
                              Expr . COMMA TupleTailExpr 

** Conflict (shift/reduce) in state 124.
** Token involved: COMMA
** This state is reached from toplevel after reading:

DFUN nonempty_list(IDt) RARROW Expr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
(?)

** In state 124, looking ahead at COMMA, reducing production
** DFunExpr -> DFUN nonempty_list(IDt) RARROW Expr 
** is permitted because of the following sub-derivation:

TupleHeadExpr 
Expr COMMA TupleTailExpr // lookahead token appears
DFunExpr // lookahead token is inherited
DFUN nonempty_list(IDt) RARROW Expr . 

** In state 124, looking ahead at COMMA, shifting is permitted
** because of the following sub-derivation:

DFunExpr 
DFUN nonempty_list(IDt) RARROW Expr 
                               TupleHeadExpr 
                               Expr . COMMA TupleTailExpr 

** Conflict (reduce/reduce) in state 122.
** Tokens involved: PLUS OR MULT MT MINUS LT HAT EQ CONS COMMA AND
** The following explanations concentrate on token PLUS.
** This state is reached from toplevel after reading:

PMExpr PLUS MExpr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
OrExpr 
AndExpr 
CmpExpr 
PMExpr LT PMExpr 
(?)

** In state 122, looking ahead at PLUS, reducing production
** PMExpr -> PMExpr PLUS MExpr 
** is permitted because of the following sub-derivation:

PMExpr PLUS MExpr // lookahead token appears
PMExpr PLUS MExpr . 

** In state 122, looking ahead at PLUS, reducing production
** PMExpr -> MExpr 
** is permitted because of the following sub-derivation:

PMExpr PLUS LookRightExpr 
            TupleHeadExpr 
            Expr COMMA TupleTailExpr 
            OrExpr 
            AndExpr 
            CmpExpr 
            PMExpr LT PMExpr 
            PMExpr PLUS MExpr // lookahead token appears
            MExpr . 

** Conflict (reduce/reduce) in state 121.
** Tokens involved: OR COMMA AND
** The following explanations concentrate on token OR.
** This state is reached from toplevel after reading:

OrExpr OR AndExpr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
OrExpr 
(?)

** In state 121, looking ahead at OR, reducing production
** OrExpr -> OrExpr OR AndExpr 
** is permitted because of the following sub-derivation:

OrExpr OR AndExpr // lookahead token appears
OrExpr OR AndExpr . 

** In state 121, looking ahead at OR, reducing production
** OrExpr -> AndExpr 
** is permitted because of the following sub-derivation:

OrExpr OR LookRightExpr 
          TupleHeadExpr 
          Expr COMMA TupleTailExpr 
          OrExpr 
          OrExpr OR AndExpr // lookahead token appears
          AndExpr . 

** Conflict (reduce/reduce) in state 119.
** Tokens involved: PLUS OR MULT MT MINUS LT HAT EQ CONS COMMA AND
** The following explanations concentrate on token PLUS.
** This state is reached from toplevel after reading:

MExpr MULT EExpr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
OrExpr 
AndExpr 
CmpExpr 
PMExpr LT PMExpr 
(?)

** In state 119, looking ahead at PLUS, reducing production
** MExpr -> MExpr MULT EExpr 
** is permitted because of the following sub-derivation:

PMExpr PLUS MExpr // lookahead token appears
MExpr // lookahead token is inherited
MExpr MULT EExpr . 

** In state 119, looking ahead at PLUS, reducing production
** MExpr -> EExpr 
** is permitted because of the following sub-derivation:

MExpr 
MExpr MULT LookRightExpr 
           TupleHeadExpr 
           Expr COMMA TupleTailExpr 
           OrExpr 
           AndExpr 
           CmpExpr 
           PMExpr LT PMExpr 
           PMExpr PLUS MExpr // lookahead token appears
           MExpr // lookahead token is inherited
           EExpr . 

** Conflict (reduce/reduce) in state 118.
** Tokens involved: OR EQ COMMA AND
** The following explanations concentrate on token OR.
** This state is reached from toplevel after reading:

HExpr CONS ConsExpr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
OrExpr 
(?)

** In state 118, looking ahead at OR, reducing production
** CmpExpr -> ConsExpr 
** is permitted because of the following sub-derivation:

AndExpr 
CmpExpr 
ConsExpr 
HExpr CONS LookRightExpr 
           TupleHeadExpr 
           Expr COMMA TupleTailExpr 
           OrExpr 
           OrExpr OR AndExpr // lookahead token appears
           AndExpr // lookahead token is inherited
           CmpExpr // lookahead token is inherited
           ConsExpr . 

** In state 118, looking ahead at OR, reducing production
** ConsExpr -> HExpr CONS ConsExpr 
** is permitted because of the following sub-derivation:

OrExpr OR AndExpr // lookahead token appears
AndExpr // lookahead token is inherited
CmpExpr // lookahead token is inherited
ConsExpr // lookahead token is inherited
HExpr CONS ConsExpr . 

** Conflict (reduce/reduce) in state 111.
** Tokens involved: OR EQ COMMA AND
** The following explanations concentrate on token OR.
** This state is reached from toplevel after reading:

AndExpr AND CmpExpr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
OrExpr 
(?)

** In state 111, looking ahead at OR, reducing production
** AndExpr -> AndExpr AND CmpExpr 
** is permitted because of the following sub-derivation:

OrExpr OR AndExpr // lookahead token appears
AndExpr // lookahead token is inherited
AndExpr AND CmpExpr . 

** In state 111, looking ahead at OR, reducing production
** AndExpr -> CmpExpr 
** is permitted because of the following sub-derivation:

AndExpr 
AndExpr AND LookRightExpr 
            TupleHeadExpr 
            Expr COMMA TupleTailExpr 
            OrExpr 
            OrExpr OR AndExpr // lookahead token appears
            AndExpr // lookahead token is inherited
            CmpExpr . 

** Conflict (shift/reduce) in state 108.
** Token involved: AND
** This state is reached from toplevel after reading:

PMExpr PLUS Expr COMMA AndExpr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
OrExpr 
AndExpr 
(?)

** In state 108, looking ahead at AND, shifting is permitted
** because of the following sub-derivation:

CmpExpr 
PMExpr LT PMExpr 
PMExpr PLUS LookRightExpr 
            TupleHeadExpr 
            Expr COMMA TupleTailExpr 
                       Expr 
                       OrExpr 
                       AndExpr 
                       AndExpr . AND CmpExpr 

** In state 108, looking ahead at AND, reducing production
** OrExpr -> AndExpr 
** is permitted because of the following sub-derivation:

AndExpr AND CmpExpr // lookahead token appears
CmpExpr // lookahead token is inherited
ConsExpr // lookahead token is inherited
HExpr // lookahead token is inherited
PMExpr // lookahead token is inherited
PMExpr PLUS LookRightExpr // lookahead token is inherited
            TupleHeadExpr // lookahead token is inherited
            Expr COMMA TupleTailExpr // lookahead token is inherited
                       Expr // lookahead token is inherited
                       OrExpr // lookahead token is inherited
                       AndExpr . 

** Conflict (reduce/reduce) in state 107.
** Tokens involved: PLUS OR MULT MT MINUS LT HAT EQ CONS COMMA AND
** The following explanations concentrate on token PLUS.
** This state is reached from toplevel after reading:

AppExpr EXPO EExpr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
OrExpr 
AndExpr 
CmpExpr 
PMExpr LT PMExpr 
(?)

** In state 107, looking ahead at PLUS, reducing production
** EExpr -> AppExpr EXPO EExpr 
** is permitted because of the following sub-derivation:

PMExpr PLUS MExpr // lookahead token appears
MExpr // lookahead token is inherited
EExpr // lookahead token is inherited
AppExpr EXPO EExpr . 

** In state 107, looking ahead at PLUS, reducing production
** MExpr -> EExpr 
** is permitted because of the following sub-derivation:

MExpr 
EExpr 
AppExpr EXPO LookRightExpr 
             TupleHeadExpr 
             Expr COMMA TupleTailExpr 
             OrExpr 
             AndExpr 
             CmpExpr 
             PMExpr LT PMExpr 
             PMExpr PLUS MExpr // lookahead token appears
             MExpr // lookahead token is inherited
             EExpr . 

** Conflict (reduce/reduce) in state 103.
** Token involved: COMMA
** This state is reached from toplevel after reading:

PMExpr PLUS DFunExpr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
(?)

** In state 103, looking ahead at COMMA, reducing production
** Expr -> DFunExpr 
** is permitted because of the following sub-derivation:

OrExpr 
AndExpr 
CmpExpr 
PMExpr LT PMExpr 
PMExpr PLUS LookRightExpr 
            TupleHeadExpr 
            Expr COMMA TupleTailExpr // lookahead token appears
            DFunExpr . 

** In state 103, looking ahead at COMMA, reducing production
** LookRightExpr -> DFunExpr 
** is permitted because of the following sub-derivation:

TupleHeadExpr 
Expr COMMA TupleTailExpr // lookahead token appears
OrExpr // lookahead token is inherited
AndExpr // lookahead token is inherited
CmpExpr // lookahead token is inherited
ConsExpr // lookahead token is inherited
HExpr // lookahead token is inherited
PMExpr // lookahead token is inherited
PMExpr PLUS LookRightExpr // lookahead token is inherited
            DFunExpr . 

** Conflict (reduce/reduce) in state 101.
** Tokens involved: PLUS OR MT MINUS LT HAT EQ CONS COMMA AND
** The following explanations concentrate on token OR.
** This state is reached from toplevel after reading:

PMExpr LT PMExpr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
OrExpr 
(?)

** In state 101, looking ahead at OR, reducing production
** CmpExpr -> PMExpr LT PMExpr 
** is permitted because of the following sub-derivation:

OrExpr OR AndExpr // lookahead token appears
AndExpr // lookahead token is inherited
CmpExpr // lookahead token is inherited
PMExpr LT PMExpr . 

** In state 101, looking ahead at OR, reducing production
** HExpr -> PMExpr 
** is permitted because of the following sub-derivation:

AndExpr 
CmpExpr 
PMExpr LT LookRightExpr 
          TupleHeadExpr 
          Expr COMMA TupleTailExpr 
          OrExpr 
          OrExpr OR AndExpr // lookahead token appears
          AndExpr // lookahead token is inherited
          CmpExpr // lookahead token is inherited
          ConsExpr // lookahead token is inherited
          HExpr // lookahead token is inherited
          PMExpr . 

** Conflict (reduce/reduce) in state 99.
** Tokens involved: PLUS OR MT MINUS LT HAT EQ CONS COMMA AND
** The following explanations concentrate on token OR.
** This state is reached from toplevel after reading:

PMExpr MT PMExpr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
OrExpr 
(?)

** In state 99, looking ahead at OR, reducing production
** CmpExpr -> PMExpr MT PMExpr 
** is permitted because of the following sub-derivation:

OrExpr OR AndExpr // lookahead token appears
AndExpr // lookahead token is inherited
CmpExpr // lookahead token is inherited
PMExpr MT PMExpr . 

** In state 99, looking ahead at OR, reducing production
** HExpr -> PMExpr 
** is permitted because of the following sub-derivation:

AndExpr 
CmpExpr 
PMExpr MT LookRightExpr 
          TupleHeadExpr 
          Expr COMMA TupleTailExpr 
          OrExpr 
          OrExpr OR AndExpr // lookahead token appears
          AndExpr // lookahead token is inherited
          CmpExpr // lookahead token is inherited
          ConsExpr // lookahead token is inherited
          HExpr // lookahead token is inherited
          PMExpr . 

** Conflict (reduce/reduce) in state 97.
** Tokens involved: PLUS OR MT MINUS LT HAT EQ CONS COMMA AND
** The following explanations concentrate on token OR.
** This state is reached from toplevel after reading:

CmpExpr EQ PMExpr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
OrExpr 
(?)

** In state 97, looking ahead at OR, reducing production
** CmpExpr -> CmpExpr EQ PMExpr 
** is permitted because of the following sub-derivation:

OrExpr OR AndExpr // lookahead token appears
AndExpr // lookahead token is inherited
CmpExpr // lookahead token is inherited
CmpExpr EQ PMExpr . 

** In state 97, looking ahead at OR, reducing production
** HExpr -> PMExpr 
** is permitted because of the following sub-derivation:

AndExpr 
CmpExpr 
CmpExpr EQ LookRightExpr 
           TupleHeadExpr 
           Expr COMMA TupleTailExpr 
           OrExpr 
           OrExpr OR AndExpr // lookahead token appears
           AndExpr // lookahead token is inherited
           CmpExpr // lookahead token is inherited
           ConsExpr // lookahead token is inherited
           HExpr // lookahead token is inherited
           PMExpr . 

** Conflict (shift/reduce) in state 95.
** Token involved: EQ
** This state is reached from toplevel after reading:

PMExpr PLUS Expr COMMA CmpExpr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
OrExpr 
AndExpr 
CmpExpr 
(?)

** In state 95, looking ahead at EQ, reducing production
** AndExpr -> CmpExpr 
** is permitted because of the following sub-derivation:

CmpExpr EQ PMExpr // lookahead token appears
ConsExpr // lookahead token is inherited
HExpr // lookahead token is inherited
PMExpr // lookahead token is inherited
PMExpr PLUS LookRightExpr // lookahead token is inherited
            TupleHeadExpr // lookahead token is inherited
            Expr COMMA TupleTailExpr // lookahead token is inherited
                       Expr // lookahead token is inherited
                       OrExpr // lookahead token is inherited
                       AndExpr // lookahead token is inherited
                       CmpExpr . 

** In state 95, looking ahead at EQ, shifting is permitted
** because of the following sub-derivation:

PMExpr LT PMExpr 
PMExpr PLUS LookRightExpr 
            TupleHeadExpr 
            Expr COMMA TupleTailExpr 
                       Expr 
                       OrExpr 
                       AndExpr 
                       CmpExpr 
                       CmpExpr . EQ PMExpr 

** Conflict (reduce/reduce) in state 91.
** Tokens involved: WITH THEN SEMISEMI SEMI RPAREN RBOXBRA PLUS OR MULT MT MINUS LT LETAND LET IN HAT EQ ELSE CONS COMMA COLON BAR AND
** The following explanations concentrate on token SEMISEMI.
** This state is reached from toplevel after reading:

Expr COMMA Expr COMMA TupleTailExpr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI // lookahead token appears
TupleHeadExpr // lookahead token is inherited
Expr COMMA TupleTailExpr // lookahead token is inherited
           (?)

** In state 91, looking ahead at SEMISEMI, reducing production
** TupleHeadExpr -> Expr COMMA TupleTailExpr 
** is permitted because of the following sub-derivation:

Expr // lookahead token is inherited
TupleHeadExpr // lookahead token is inherited
Expr COMMA TupleTailExpr . 

** In state 91, looking ahead at SEMISEMI, reducing production
** TupleTailExpr -> Expr COMMA TupleTailExpr 
** is permitted because of the following sub-derivation:

Expr COMMA TupleTailExpr . 

** Conflict (shift/reduce) in state 89.
** Token involved: COMMA
** This state is reached from toplevel after reading:

Expr COMMA Expr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
TupleHeadExpr 
(?)

** In state 89, looking ahead at COMMA, shifting is permitted
** because of the following sub-derivation:

Expr COMMA TupleTailExpr 
           Expr 
           TupleHeadExpr 
           Expr . COMMA TupleTailExpr 

** In state 89, looking ahead at COMMA, reducing production
** TupleTailExpr -> Expr 
** is permitted because of the following sub-derivation:

Expr COMMA TupleTailExpr // lookahead token appears
TupleHeadExpr // lookahead token is inherited
Expr COMMA TupleTailExpr // lookahead token is inherited
           Expr . 

** Conflict (reduce/reduce) in state 80.
** Token involved: COMMA
** This state is reached from toplevel after reading:

PMExpr PLUS FunExpr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
(?)

** In state 80, looking ahead at COMMA, reducing production
** Expr -> FunExpr 
** is permitted because of the following sub-derivation:

OrExpr 
AndExpr 
CmpExpr 
PMExpr LT PMExpr 
PMExpr PLUS LookRightExpr 
            TupleHeadExpr 
            Expr COMMA TupleTailExpr // lookahead token appears
            FunExpr . 

** In state 80, looking ahead at COMMA, reducing production
** LookRightExpr -> FunExpr 
** is permitted because of the following sub-derivation:

TupleHeadExpr 
Expr COMMA TupleTailExpr // lookahead token appears
OrExpr // lookahead token is inherited
AndExpr // lookahead token is inherited
CmpExpr // lookahead token is inherited
ConsExpr // lookahead token is inherited
HExpr // lookahead token is inherited
PMExpr // lookahead token is inherited
PMExpr PLUS LookRightExpr // lookahead token is inherited
            FunExpr . 

** Conflict (reduce/reduce) in state 77.
** Tokens involved: PLUS OR MULT MT MINUS LT HAT EQ CONS COMMA AND
** The following explanations concentrate on token PLUS.
** This state is reached from toplevel after reading:

PMExpr MINUS MExpr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
OrExpr 
AndExpr 
CmpExpr 
PMExpr LT PMExpr 
(?)

** In state 77, looking ahead at PLUS, reducing production
** PMExpr -> PMExpr MINUS MExpr 
** is permitted because of the following sub-derivation:

PMExpr PLUS MExpr // lookahead token appears
PMExpr MINUS MExpr . 

** In state 77, looking ahead at PLUS, reducing production
** PMExpr -> MExpr 
** is permitted because of the following sub-derivation:

PMExpr MINUS LookRightExpr 
             TupleHeadExpr 
             Expr COMMA TupleTailExpr 
             OrExpr 
             AndExpr 
             CmpExpr 
             PMExpr LT PMExpr 
             PMExpr PLUS MExpr // lookahead token appears
             MExpr . 

** Conflict (shift/reduce) in state 75.
** Tokens involved: PLUS MINUS
** The following explanations concentrate on token PLUS.
** This state is reached from toplevel after reading:

PMExpr PLUS Expr COMMA HExpr HAT PMExpr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
OrExpr 
AndExpr 
CmpExpr 
PMExpr LT PMExpr 
(?)

** In state 75, looking ahead at PLUS, reducing production
** HExpr -> HExpr HAT PMExpr 
** is permitted because of the following sub-derivation:

PMExpr PLUS MExpr // lookahead token appears
PMExpr PLUS LookRightExpr // lookahead token is inherited
            TupleHeadExpr // lookahead token is inherited
            Expr COMMA TupleTailExpr // lookahead token is inherited
                       Expr // lookahead token is inherited
                       OrExpr // lookahead token is inherited
                       AndExpr // lookahead token is inherited
                       CmpExpr // lookahead token is inherited
                       ConsExpr // lookahead token is inherited
                       HExpr // lookahead token is inherited
                       HExpr HAT PMExpr . 

** In state 75, looking ahead at PLUS, shifting is permitted
** because of the following sub-derivation:

PMExpr PLUS LookRightExpr 
            TupleHeadExpr 
            Expr COMMA TupleTailExpr 
                       Expr 
                       OrExpr 
                       AndExpr 
                       CmpExpr 
                       ConsExpr 
                       HExpr CONS ConsExpr 
                       HExpr HAT PMExpr 
                                 PMExpr . PLUS MExpr 

** Conflict (shift/reduce) in state 73.
** Tokens involved: HAT CONS
** The following explanations concentrate on token HAT.
** This state is reached from toplevel after reading:

PMExpr PLUS Expr COMMA HExpr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
OrExpr 
AndExpr 
CmpExpr 
(?)

** In state 73, looking ahead at HAT, reducing production
** ConsExpr -> HExpr 
** is permitted because of the following sub-derivation:

ConsExpr 
HExpr CONS ConsExpr 
HExpr HAT PMExpr // lookahead token appears
PMExpr // lookahead token is inherited
PMExpr PLUS LookRightExpr // lookahead token is inherited
            TupleHeadExpr // lookahead token is inherited
            Expr COMMA TupleTailExpr // lookahead token is inherited
                       Expr // lookahead token is inherited
                       OrExpr // lookahead token is inherited
                       AndExpr // lookahead token is inherited
                       CmpExpr // lookahead token is inherited
                       ConsExpr // lookahead token is inherited
                       HExpr . 

** In state 73, looking ahead at HAT, shifting is permitted
** because of the following sub-derivation:

PMExpr LT PMExpr 
PMExpr PLUS LookRightExpr 
            TupleHeadExpr 
            Expr COMMA TupleTailExpr 
                       Expr 
                       OrExpr 
                       AndExpr 
                       CmpExpr 
                       ConsExpr 
                       HExpr CONS ConsExpr 
                       HExpr . HAT PMExpr 

** Conflict (reduce/reduce) in state 72.
** Token involved: COMMA
** This state is reached from toplevel after reading:

PMExpr PLUS IfExpr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
(?)

** In state 72, looking ahead at COMMA, reducing production
** Expr -> IfExpr 
** is permitted because of the following sub-derivation:

OrExpr 
AndExpr 
CmpExpr 
PMExpr LT PMExpr 
PMExpr PLUS LookRightExpr 
            TupleHeadExpr 
            Expr COMMA TupleTailExpr // lookahead token appears
            IfExpr . 

** In state 72, looking ahead at COMMA, reducing production
** LookRightExpr -> IfExpr 
** is permitted because of the following sub-derivation:

TupleHeadExpr 
Expr COMMA TupleTailExpr // lookahead token appears
OrExpr // lookahead token is inherited
AndExpr // lookahead token is inherited
CmpExpr // lookahead token is inherited
ConsExpr // lookahead token is inherited
HExpr // lookahead token is inherited
PMExpr // lookahead token is inherited
PMExpr PLUS LookRightExpr // lookahead token is inherited
            IfExpr . 

** Conflict (reduce/reduce) in state 71.
** Token involved: COMMA
** This state is reached from toplevel after reading:

PMExpr PLUS LetExpr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
(?)

** In state 71, looking ahead at COMMA, reducing production
** Expr -> LetExpr 
** is permitted because of the following sub-derivation:

OrExpr 
AndExpr 
CmpExpr 
PMExpr LT PMExpr 
PMExpr PLUS LookRightExpr 
            TupleHeadExpr 
            Expr COMMA TupleTailExpr // lookahead token appears
            LetExpr . 

** In state 71, looking ahead at COMMA, reducing production
** LookRightExpr -> LetExpr 
** is permitted because of the following sub-derivation:

TupleHeadExpr 
Expr COMMA TupleTailExpr // lookahead token appears
OrExpr // lookahead token is inherited
AndExpr // lookahead token is inherited
CmpExpr // lookahead token is inherited
ConsExpr // lookahead token is inherited
HExpr // lookahead token is inherited
PMExpr // lookahead token is inherited
PMExpr PLUS LookRightExpr // lookahead token is inherited
            LetExpr . 

** Conflict (reduce/reduce) in state 70.
** Token involved: COMMA
** This state is reached from toplevel after reading:

PMExpr PLUS LetRecExpr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
(?)

** In state 70, looking ahead at COMMA, reducing production
** Expr -> LetRecExpr 
** is permitted because of the following sub-derivation:

OrExpr 
AndExpr 
CmpExpr 
PMExpr LT PMExpr 
PMExpr PLUS LookRightExpr 
            TupleHeadExpr 
            Expr COMMA TupleTailExpr // lookahead token appears
            LetRecExpr . 

** In state 70, looking ahead at COMMA, reducing production
** LookRightExpr -> LetRecExpr 
** is permitted because of the following sub-derivation:

TupleHeadExpr 
Expr COMMA TupleTailExpr // lookahead token appears
OrExpr // lookahead token is inherited
AndExpr // lookahead token is inherited
CmpExpr // lookahead token is inherited
ConsExpr // lookahead token is inherited
HExpr // lookahead token is inherited
PMExpr // lookahead token is inherited
PMExpr PLUS LookRightExpr // lookahead token is inherited
            LetRecExpr . 

** Conflict (shift/reduce) in state 66.
** Token involved: MULT
** This state is reached from toplevel after reading:

MExpr MULT Expr COMMA MExpr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
OrExpr 
AndExpr 
CmpExpr 
PMExpr LT PMExpr 
MExpr 
(?)

** In state 66, looking ahead at MULT, shifting is permitted
** because of the following sub-derivation:

MExpr MULT LookRightExpr 
           TupleHeadExpr 
           Expr COMMA TupleTailExpr 
                      Expr 
                      OrExpr 
                      AndExpr 
                      CmpExpr 
                      PMExpr LT PMExpr 
                      MExpr 
                      MExpr . MULT EExpr 

** In state 66, looking ahead at MULT, reducing production
** PMExpr -> MExpr 
** is permitted because of the following sub-derivation:

MExpr MULT EExpr // lookahead token appears
MExpr MULT LookRightExpr // lookahead token is inherited
           TupleHeadExpr // lookahead token is inherited
           Expr COMMA TupleTailExpr // lookahead token is inherited
                      Expr // lookahead token is inherited
                      OrExpr // lookahead token is inherited
                      AndExpr // lookahead token is inherited
                      CmpExpr // lookahead token is inherited
                      ConsExpr // lookahead token is inherited
                      HExpr // lookahead token is inherited
                      PMExpr // lookahead token is inherited
                      MExpr . 

** Conflict (reduce/reduce) in state 65.
** Token involved: COMMA
** This state is reached from toplevel after reading:

PMExpr PLUS MatchExpr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
(?)

** In state 65, looking ahead at COMMA, reducing production
** Expr -> MatchExpr 
** is permitted because of the following sub-derivation:

OrExpr 
AndExpr 
CmpExpr 
PMExpr LT PMExpr 
PMExpr PLUS LookRightExpr 
            TupleHeadExpr 
            Expr COMMA TupleTailExpr // lookahead token appears
            MatchExpr . 

** In state 65, looking ahead at COMMA, reducing production
** LookRightExpr -> MatchExpr 
** is permitted because of the following sub-derivation:

TupleHeadExpr 
Expr COMMA TupleTailExpr // lookahead token appears
OrExpr // lookahead token is inherited
AndExpr // lookahead token is inherited
CmpExpr // lookahead token is inherited
ConsExpr // lookahead token is inherited
HExpr // lookahead token is inherited
PMExpr // lookahead token is inherited
PMExpr PLUS LookRightExpr // lookahead token is inherited
            MatchExpr . 

** Conflict (shift/reduce) in state 63.
** Token involved: OR
** This state is reached from toplevel after reading:

PMExpr PLUS Expr COMMA OrExpr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
OrExpr 
(?)

** In state 63, looking ahead at OR, reducing production
** Expr -> OrExpr 
** is permitted because of the following sub-derivation:

OrExpr OR AndExpr // lookahead token appears
AndExpr // lookahead token is inherited
CmpExpr // lookahead token is inherited
ConsExpr // lookahead token is inherited
HExpr // lookahead token is inherited
PMExpr // lookahead token is inherited
PMExpr PLUS LookRightExpr // lookahead token is inherited
            TupleHeadExpr // lookahead token is inherited
            Expr COMMA TupleTailExpr // lookahead token is inherited
                       Expr // lookahead token is inherited
                       OrExpr . 

** In state 63, looking ahead at OR, shifting is permitted
** because of the following sub-derivation:

AndExpr 
CmpExpr 
PMExpr LT PMExpr 
PMExpr PLUS LookRightExpr 
            TupleHeadExpr 
            Expr COMMA TupleTailExpr 
                       Expr 
                       OrExpr 
                       OrExpr . OR AndExpr 

** Conflict (reduce/reduce) in state 62.
** Token involved: COMMA
** This state is reached from toplevel after reading:

PMExpr PLUS TupleHeadExpr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
(?)

** In state 62, looking ahead at COMMA, reducing production
** Expr -> TupleHeadExpr 
** is permitted because of the following sub-derivation:

OrExpr 
AndExpr 
CmpExpr 
PMExpr LT PMExpr 
PMExpr PLUS LookRightExpr 
            TupleHeadExpr 
            Expr COMMA TupleTailExpr // lookahead token appears
            TupleHeadExpr . 

** In state 62, looking ahead at COMMA, reducing production
** LookRightExpr -> TupleHeadExpr 
** is permitted because of the following sub-derivation:

TupleHeadExpr 
Expr COMMA TupleTailExpr // lookahead token appears
OrExpr // lookahead token is inherited
AndExpr // lookahead token is inherited
CmpExpr // lookahead token is inherited
ConsExpr // lookahead token is inherited
HExpr // lookahead token is inherited
PMExpr // lookahead token is inherited
PMExpr PLUS LookRightExpr // lookahead token is inherited
            TupleHeadExpr . 

** Conflict (shift/reduce) in state 60.
** Tokens involved: PLUS MT MINUS LT
** The following explanations concentrate on token PLUS.
** This state is reached from toplevel after reading:

PMExpr PLUS Expr COMMA PMExpr 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
OrExpr 
AndExpr 
CmpExpr 
PMExpr LT PMExpr 
(?)

** In state 60, looking ahead at PLUS, reducing production
** HExpr -> PMExpr 
** is permitted because of the following sub-derivation:

PMExpr PLUS MExpr // lookahead token appears
PMExpr PLUS LookRightExpr // lookahead token is inherited
            TupleHeadExpr // lookahead token is inherited
            Expr COMMA TupleTailExpr // lookahead token is inherited
                       Expr // lookahead token is inherited
                       OrExpr // lookahead token is inherited
                       AndExpr // lookahead token is inherited
                       CmpExpr // lookahead token is inherited
                       ConsExpr // lookahead token is inherited
                       HExpr // lookahead token is inherited
                       PMExpr . 

** In state 60, looking ahead at PLUS, shifting is permitted
** because of the following sub-derivation:

PMExpr PLUS LookRightExpr 
            TupleHeadExpr 
            Expr COMMA TupleTailExpr 
                       Expr 
                       OrExpr 
                       AndExpr 
                       CmpExpr 
                       PMExpr LT PMExpr 
                       PMExpr . PLUS MExpr 

** Conflict (reduce/reduce) in state 31.
** Tokens involved: RPAREN MULT EQ
** The following explanations concentrate on token RPAREN.
** This state is reached from toplevel after reading:

LPAREN Expr COLON TupleType MULT TupleType MULT TupleTailType 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
OrExpr 
AndExpr 
CmpExpr 
PMExpr LT PMExpr 
MExpr 
EExpr 
AppExpr EXPO EExpr 
FunInfixExpr 
AExpr 
LPAREN Expr COLON TupleType RPAREN // lookahead token appears
                  TupleHeadType // lookahead token is inherited
                  TupleType MULT TupleTailType // lookahead token is inherited
                                 (?)

** In state 31, looking ahead at RPAREN, reducing production
** TupleHeadType -> TupleType MULT TupleTailType 
** is permitted because of the following sub-derivation:

TupleType // lookahead token is inherited
TupleHeadType // lookahead token is inherited
TupleType MULT TupleTailType . 

** In state 31, looking ahead at RPAREN, reducing production
** TupleTailType -> TupleType MULT TupleTailType 
** is permitted because of the following sub-derivation:

TupleType MULT TupleTailType . 

** Conflict (shift/reduce) in state 29.
** Token involved: MULT
** This state is reached from toplevel after reading:

LPAREN Expr COLON TupleType MULT TupleType 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

toplevel 
Expr SEMISEMI 
OrExpr 
AndExpr 
CmpExpr 
PMExpr LT PMExpr 
MExpr 
EExpr 
AppExpr EXPO EExpr 
FunInfixExpr 
AExpr 
LPAREN Expr COLON TupleType RPAREN 
                  TupleHeadType 
                  (?)

** In state 29, looking ahead at MULT, shifting is permitted
** because of the following sub-derivation:

TupleType MULT TupleTailType 
               TupleType 
               TupleHeadType 
               TupleType . MULT TupleTailType 

** In state 29, looking ahead at MULT, reducing production
** TupleTailType -> TupleType 
** is permitted because of the following sub-derivation:

TupleType MULT TupleTailType // lookahead token appears
TupleHeadType // lookahead token is inherited
TupleType MULT TupleTailType // lookahead token is inherited
               TupleType . 
